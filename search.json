[{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007 _Copyright © 2007 Free Software Foundation, Inc. Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://epiben.github.io/hrqolr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://epiben.github.io/hrqolr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Skov Kaas-Hansen. Author, maintainer. Anders Granholm. Author. Aksel Karl Georg Jensen. Contributor.","code":""},{"path":"https://epiben.github.io/hrqolr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaas-Hansen BS, Jensen AKG, Granholm (2023). hrqolr: R package simulating health-related quality life trajectories. https://inceptdk.github.io/hrqolr/","code":"@Manual{,   title = {{hrqolr}: an R package for simulating health-related quality of life trajectories},   author = {Benjamin Skov Kaas-Hansen and Aksel Karl Georg Jensen and Anders Granholm},   year = {2023},   url = {https://inceptdk.github.io/hrqolr/}, }"},{"path":"https://epiben.github.io/hrqolr/index.html","id":"hrqolr-","dir":"","previous_headings":"","what":"Simulator of health-related quality of life trajectories","title":"Simulator of health-related quality of life trajectories","text":"Package simulating two-arm randomised clinical trials temporal trajectories health-related quality life (HRQoL) outcome quantifies effect sizes single-sampled HRQoL values end follow-area trajectories. Developed part INCEPT (Intensive Care Platform Trial) project (https://incept.dk/), primarily supported grant Sygeforsikringen “danmark” (https://www.sygeforsikring.dk/).","code":""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Simulator of health-related quality of life trajectories","text":"Website - stand-alone website full package documentation Health-related quality life trajectories critical illness: protocol Monte Carlo simulation study - article Acta Anaesthesiologica Scandinavica outlining first scientific study use hrqolr","code":""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulator of health-related quality of life trajectories","text":"easiest way install CRAN directly: can also install development version directly GitHub. requires remotes-package installed. development version may contain additional features yet available stable CRAN version, may unstable lack documentation.","code":"install.packages(\"hrqolr\") # install.packages(\"remotes\")  remotes::install_github(\"INCEPTdk/hrqolr@dev\")"},{"path":"https://epiben.github.io/hrqolr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Simulator of health-related quality of life trajectories","text":"hrqolr built simulate many scenarios.","code":"library(hrqolr) #> Loading 'hrqolr' package v0.1.0. #> For help, run 'help(\"hrqolr\")' or  #> check out https://inceptdk.github.io/hrqolr/. #> Consider running 'cache_hrqolr()' for faster simulations.  #> If you have enough RAM, consider increasing the cache size;  #> run '?cache_hrqolr' for details. cache_hrqolr()  scenario <- list(     n_trials = 100L,     n_patients_per_arm = 100L,          start_hrqol_ctrl = 0.1,     final_hrqol_ctrl = 0.75,     relative_improvement_final_hrqol_actv = 0.0,     sampling_frequency = 14L,     acceleration_hrqol_actv = 0.1,          mortality_ctrl = 0.4,     relative_mortality_reduction_actv = 0.0,     mortality_dampening = 0.0,     mortality_trajectory_shape = \"exp_decay\",     prop_mortality_benefitters_actv = 0.0,          n_digits = 3,     n_patients_ground_truth = 1000L,     n_example_trajectories_per_arm = 100L )  example_trajs <- do.call(sample_example_trajectories, scenario) example_trajs #> $arm_level #>               arm          x         y #>   1: intervention   0.000000 0.0000000 #>   2: intervention   9.000000 0.1000000 #>   3: intervention   9.007835 0.1100861 #>   4: intervention   9.022878 0.1102224 #>   5: intervention   9.045034 0.1104414 #>  ---                                   #> 594:      control 190.582005 0.7500000 #> 595:      control 190.748687 0.7500000 #> 596:      control 190.874375 0.7500000 #> 597:      control 190.958377 0.7500000 #> 598:      control 191.000000 0.7500000 #>  #> $patient_level #>                arm  id   x     y #>    1: intervention   1   0 0.000 #>    2: intervention   1   3 0.156 #>    3: intervention   1   4 0.000 #>    4: intervention   2   0 0.000 #>    5: intervention   2  10    NA #>   ---                            #> 2038:      control 199 189 0.756 #> 2039:      control 200   0 0.000 #> 2040:      control 200   2 0.059 #> 2041:      control 200  16 0.000 #> 2042:      control 200  20 0.000 #>  #> attr(,\"class\") #> [1] \"hrqolr_trajectories\" \"list\""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"visualise-trajectories","dir":"","previous_headings":"Example","what":"Visualise trajectories","title":"Simulator of health-related quality of life trajectories","text":"might also want break apart trajectories arms. Hiding legend, , makes sense facet strips already provide information. , also set arm-level trajectory black set apart individual patient trajectories:  course, might also interested summarising trajectories. , example, inter-quartile range. Note ribbons become bit wonky end follow-increasingly observations, may low , e.g., mortality benefitters still alive.  scenario specification can, , used simulate desired number trials:","code":"plot(example_trajs) library(ggplot2)   plot(example_trajs, arm_aes = list(colour = \"black\")) +     facet_wrap(~ arm) +     theme(legend.position = \"none\") plot(example_trajs, \"summarise\", ribbon_percentiles = c(0.25, 0.75)) sims <- do.call(simulate_trials, scenario) #> 2023-09-29 22:32:13: STARTING BATCH 1 (0 secs) #> 2023-09-29 22:32:13: Estimating ground truth of arm actv (0.01 secs) #> 2023-09-29 22:32:26: Finished actv arm in batch (12.12 secs) #> 2023-09-29 22:32:26: Estimating ground truth of arm ctrl (12.12 secs) #> 2023-09-29 22:32:37: Finished ctrl arm in batch (11.45 secs) #> 2023-09-29 22:32:37: Finished batch (11.78 secs) #> 2023-09-29 22:32:38: Combining data into final return struct (24.07 secs) #> 2023-09-29 22:32:38: Wrapping up, returning output (24.1 secs) sims #> $summary_stats #>                                  outcome          arm        mean         p25 #>  1:    surv__primary__hrqol_at_eof__mean intervention   0.5363629   0.5180439 #>  2:    surv__primary__hrqol_at_eof__mean      control   0.5436186   0.5250157 #>  3:       surv__primary__hrqol_auc__mean intervention  78.6739450  75.7291399 #>  4:       surv__primary__hrqol_auc__mean      control  78.1052664  75.1811988 #>  5: surv__secondary1__hrqol_at_eof__mean intervention   0.6361485   0.6137020 #>  6: surv__secondary1__hrqol_at_eof__mean      control   0.6447538   0.6219722 #>  7:    surv__secondary1__hrqol_auc__mean intervention  93.1917532  90.1781333 #>  8:    surv__secondary1__hrqol_auc__mean      control  92.3883222  89.3774531 #>  9: surv__secondary2__hrqol_at_eof__mean intervention   0.7347596   0.7309086 #> 10: surv__secondary2__hrqol_at_eof__mean      control   0.7446996   0.7407697 #> 11:    surv__secondary2__hrqol_auc__mean intervention 100.8029468 100.0206638 #> 12:    surv__secondary2__hrqol_auc__mean      control 100.3282820  99.5402182 #> 13:     all__primary__hrqol_at_eof__mean intervention   0.4349474   0.4038075 #> 14:     all__primary__hrqol_at_eof__mean      control   0.4408314   0.4093075 #> 15:        all__primary__hrqol_auc__mean intervention  63.8011554  59.4058002 #> 16:        all__primary__hrqol_auc__mean      control  63.3397780  58.9523711 #> 17:  all__secondary1__hrqol_at_eof__mean intervention   0.4350250   0.4038075 #> 18:  all__secondary1__hrqol_at_eof__mean      control   0.4409100   0.4093075 #> 19:     all__secondary1__hrqol_auc__mean intervention  63.7307650  59.3082761 #> 20:     all__secondary1__hrqol_auc__mean      control  63.1810940  58.7902536 #> 21:  all__secondary2__hrqol_at_eof__mean intervention   0.4350250   0.4038075 #> 22:  all__secondary2__hrqol_at_eof__mean      control   0.4409100   0.4093075 #> 23:     all__secondary2__hrqol_auc__mean intervention  59.6803108  55.1923682 #> 24:     all__secondary2__hrqol_auc__mean      control  59.3992286  54.9363650 #>                                  outcome          arm        mean         p25 #>             p50         p75          sd           se #>  1:   0.5378694   0.5649285 0.038368805 0.0038368805 #>  2:   0.5451308   0.5725293 0.038875801 0.0038875801 #>  3:  78.7370355  82.5499391 5.640287968 0.5640287968 #>  4:  78.1600141  81.9473627 5.598226080 0.5598226080 #>  5:   0.6381614   0.6555895 0.030252419 0.0030252419 #>  6:   0.6467935   0.6643916 0.030636807 0.0030636807 #>  7:  93.0348663  95.8695896 4.536845003 0.4536845003 #>  8:  92.2908923  95.0342591 4.499531724 0.4499531724 #>  9:   0.7350565   0.7398001 0.008325213 0.0008325213 #> 10:   0.7450565   0.7498001 0.008391762 0.0008391762 #> 11: 100.9365647 101.6080603 1.260308655 0.1260308655 #> 12: 100.4613556 101.1290890 1.255960397 0.1255960397 #> 13:   0.4350900   0.4636600 0.036942242 0.0036942242 #> 14:   0.4409900   0.4698900 0.037436543 0.0037436543 #> 15:  63.8060768  68.0960443 5.461966473 0.5461966473 #> 16:  63.3256063  67.5938003 5.419147247 0.5419147247 #> 17:   0.4350900   0.4636600 0.036813658 0.0036813658 #> 18:   0.4409900   0.4698900 0.037306248 0.0037306248 #> 19:  63.6956264  68.0591989 5.460269005 0.5460269005 #> 20:  63.1506977  67.4808441 5.411327893 0.5411327893 #> 21:   0.4350900   0.4636600 0.036813658 0.0036813658 #> 22:   0.4409900   0.4698900 0.037306248 0.0037306248 #> 23:  59.6927726  63.7065086 5.044316436 0.5044316436 #> 24:  59.4120469  63.4006617 5.020074136 0.5020074136 #>             p50         p75          sd           se #>  #> $comparisons #>                            outcome         mean mean_ground_truth           sd #>  1:    surv__primary__hrqol_at_eof -0.007255676      -0.032463362 5.102650e-04 #>  2:       surv__primary__hrqol_auc  0.568678594      -3.427828929 5.062304e-02 #>  3: surv__secondary1__hrqol_at_eof -0.008605298      -0.014425307 3.897969e-04 #>  4:    surv__secondary1__hrqol_auc  0.803430982      -0.475974463 4.511705e-02 #>  5: surv__secondary2__hrqol_at_eof -0.009940054      -0.007674645 9.296047e-05 #>  6:    surv__secondary2__hrqol_auc  0.474664850       0.150302836 1.750253e-02 #>  7:     all__primary__hrqol_at_eof -0.005884000      -0.031188000 4.965985e-04 #>  8:        all__primary__hrqol_auc  0.461377320      -3.484177734 4.842485e-02 #>  9:  all__secondary1__hrqol_at_eof -0.005885000      -0.030474000 4.948982e-04 #> 10:     all__secondary1__hrqol_auc  0.549671032      -3.307522503 5.180743e-02 #> 11:  all__secondary2__hrqol_at_eof -0.005885000      -0.030474000 4.948982e-04 #> 12:     all__secondary2__hrqol_auc  0.281082149      -3.430510836 2.619489e-02 #>               se         bias bias_corrected_coverage #>  1: 5.102650e-05  0.025207687                       1 #>  2: 5.062304e-03  3.996507524                       1 #>  3: 3.897969e-05  0.005820009                       1 #>  4: 4.511705e-03  1.279405446                       1 #>  5: 9.296047e-06 -0.002265409                       1 #>  6: 1.750253e-03  0.324362015                       1 #>  7: 4.965985e-05  0.025304000                       1 #>  8: 4.842485e-03  3.945555054                       1 #>  9: 4.948982e-05  0.024589000                       1 #> 10: 5.180743e-03  3.857193535                       1 #> 11: 4.948982e-05  0.024589000                       1 #> 12: 2.619489e-03  3.711592986                       1 #>     bias_corrected_coverage_se      bias_se coverage coverage_se          mse #>  1:                          0 5.102650e-05        1           0 6.356852e-04 #>  2:                          0 5.062304e-03        1           0 1.597461e+01 #>  3:                          0 3.897969e-05        1           0 3.402292e-05 #>  4:                          0 4.511705e-03        1           0 1.638893e+00 #>  5:                          0 9.296047e-06        1           0 5.140631e-06 #>  6:                          0 1.750253e-03        1           0 1.055140e-01 #>  7:                          0 4.965985e-05        1           0 6.405366e-04 #>  8:                          0 4.842485e-03        1           0 1.556973e+01 #>  9:                          0 4.948982e-05        1           0 6.048614e-04 #> 10:                          0 5.180743e-03        1           0 1.488060e+01 #> 11:                          0 4.948982e-05        1           0 6.048614e-04 #> 12:                          0 2.619489e-03        1           0 1.377660e+01 #>           mse_se n_sim          p25          p50          p75 #>  1: 2.581155e-06   100 -0.007597533 -0.007272727 -0.006971836 #>  2: 4.033858e-02   100  0.541569003  0.569016907  0.605626993 #>  3: 4.528374e-07   100 -0.008873239 -0.008642506 -0.008326923 #>  4: 1.153228e-02   100  0.776209726  0.803571104  0.831226660 #>  5: 4.105549e-08   100 -0.010000000 -0.010000000 -0.009841270 #>  6: 1.121230e-03   100  0.464162632  0.476716450  0.486870779 #>  7: 2.519071e-06   100 -0.006300000 -0.005900000 -0.005500000 #>  8: 3.815105e-02   100  0.430383558  0.466298588  0.501366554 #>  9: 2.439440e-06   100 -0.006300000 -0.005900000 -0.005500000 #> 10: 3.988587e-02   100  0.521086035  0.551357547  0.592534980 #> 11: 2.439440e-06   100 -0.006300000 -0.005900000 -0.005500000 #> 12: 1.942701e-02   100  0.264706686  0.282819463  0.300313246 #>     rejection_proportion rejection_proportion_se relative_bias relative_bias_se #>  1:                    0                       0    -0.7764965     0.0015718181 #>  2:                    0                       0    -1.1659005     0.0014768253 #>  3:                    0                       0    -0.4034582     0.0027021740 #>  4:                    0                       0    -2.6879708     0.0094788803 #>  5:                    0                       0     0.2951809     0.0012112673 #>  6:                    0                       0     2.1580565     0.0116448438 #>  7:                    0                       0    -0.8113377     0.0015922744 #>  8:                    0                       0    -1.1324207     0.0013898502 #>  9:                    0                       0    -0.8068846     0.0016240015 #> 10:                    0                       0    -1.1661881     0.0015663515 #> 11:                    0                       0    -0.8068846     0.0016240015 #> 12:                    0                       0    -1.0819359     0.0007635858 #>  #> $args #> $args$n_trials #> [1] 100 #>  #> $args$n_patients_per_arm #> [1] 100 #>  #> $args$start_hrqol_ctrl #> [1] 0.1 #>  #> $args$final_hrqol_ctrl #> [1] 0.75 #>  #> $args$relative_improvement_start_hrqol_actv #> [1] 0 #>  #> $args$relative_improvement_final_hrqol_actv #> [1] 0 #>  #> $args$sampling_frequency #> [1] 14 #>  #> $args$acceleration_hrqol_actv #> [1] 0.1 #>  #> $args$mortality_ctrl #> [1] 0.4 #>  #> $args$relative_mortality_reduction_actv #> [1] 0 #>  #> $args$mortality_dampening #> [1] 0 #>  #> $args$mortality_trajectory_shape #> [1] \"exp_decay\" #>  #> $args$prop_mortality_benefitters_actv #> [1] 0 #>  #> $args$verbose #> [1] TRUE #>  #> $args$n_digits #> [1] 3 #>  #> $args$seed #> [1] 1028563912 #>  #> $args$n_patients_ground_truth #> [1] 1000 #>  #> $args$n_example_trajectories_per_arm #> [1] 100 #>  #> $args$... #>  #>  #>  #> $elapsed_time #> Time difference of 24.10509 secs #>  #> $example_trajectories #> $arm_level #>               arm         x         y #>   1: intervention   0.00000 0.0000000 #>   2: intervention  12.00000 0.1000000 #>   3: intervention  12.00827 0.1100856 #>   4: intervention  12.02421 0.1102203 #>   5: intervention  12.04771 0.1104366 #>  ---                                  #> 594:      control 179.62914 0.7500000 #> 595:      control 179.77697 0.7500000 #> 596:      control 179.88847 0.7500000 #> 597:      control 179.96301 0.7500000 #> 598:      control 180.00000 0.7500000 #>  #> $patient_level #>                arm  id   x         y #>    1: intervention   1   0 0.0000000 #>    2: intervention   1   2 0.0740000 #>    3: intervention   1  16 0.3145785 #>    4: intervention   1  30 0.4242271 #>    5: intervention   1  44 0.5026606 #>   ---                                #> 1915:      control 200 134 0.7298478 #> 1916:      control 200 148 0.7360000 #> 1917:      control 200 162 0.7380000 #> 1918:      control 200 176 0.7380000 #> 1919:      control 200 190 0.7380000 #>  #> attr(,\"class\") #> [1] \"hrqolr_trajectories\" \"list\"                #>  #> attr(,\"class\") #> [1] \"hrqolr_results\" \"list\""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"issues-and-enhancements","dir":"","previous_headings":"","what":"Issues and enhancements","title":"Simulator of health-related quality of life trajectories","text":"use GitHub issue tracker bug/issue reports proposals enhancements.","code":""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Simulator of health-related quality of life trajectories","text":"welcome contributions directly code improve performance well new functionality. latter, please first explain motivate issue. Changes code base follow steps: Fork repository Make branch appropriate name fork Implement changes fork, make sure passes R CMD check (neither errors, warnings, notes) add bullet top NEWS.md short description change, GitHub handle id pull request implementing change (check NEWS.md file see formatting) Create pull request dev branch adaptr","code":""},{"path":"https://epiben.github.io/hrqolr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Simulator of health-related quality of life trajectories","text":"using package, please consider citing :","code":"citation(package = \"hrqolr\") #> To cite package 'hrqolr' in publications use: #>  #>   it Ww (2023). _hrqolr: What the Package Does (Title Case)_. R package #>   version 0.1.0, <https://epiben.github.io/hrqolr/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {hrqolr: What the Package Does (Title Case)}, #>     author = {Who wrote it}, #>     year = {2023}, #>     note = {R package version 0.1.0}, #>     url = {https://epiben.github.io/hrqolr/}, #>   } #>  #> ATTENTION: This citation information has been auto-generated from the #> package DESCRIPTION file and may need manual editing, see #> 'help(\"citation\")'."},{"path":"https://epiben.github.io/hrqolr/reference/OR.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL — OR","title":"Default value for NULL — OR","text":"Infix function easy replacement NULL default value.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/OR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NULL — OR","text":"","code":"a %||% b"},{"path":"https://epiben.github.io/hrqolr/reference/OR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NULL — OR","text":", b arbitrary vectors","code":""},{"path":"https://epiben.github.io/hrqolr/reference/assert_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of required packages — assert_pkgs","title":"Check availability of required packages — assert_pkgs","text":"Used internally, helper function check SUGGESTED packages available. halt execution queried packages available provide installation instructions.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/assert_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of required packages — assert_pkgs","text":"","code":"assert_pkgs(pkgs = NULL)"},{"path":"https://epiben.github.io/hrqolr/reference/assert_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of required packages — assert_pkgs","text":"pkgs, character vector name(s) package(s) check.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/assert_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of required packages — assert_pkgs","text":"TRUE packages available, otherwise execution halted error.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute area under the curve — auc","title":"Compute area under the curve — auc","text":"Assumes x y length. Checking mean huge performance hit.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute area under the curve — auc","text":"","code":"auc(x, y)"},{"path":"https://epiben.github.io/hrqolr/reference/auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute area under the curve — auc","text":"x, y vectors, coordinates curve area computed","code":""},{"path":"https://epiben.github.io/hrqolr/reference/auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute area under the curve — auc","text":"scalar","code":""},{"path":"https://epiben.github.io/hrqolr/reference/beautify_arm_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Give arm variable proper form and names — beautify_arm_var","title":"Give arm variable proper form and names — beautify_arm_var","text":"Give arm variable proper form names","code":""},{"path":"https://epiben.github.io/hrqolr/reference/beautify_arm_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give arm variable proper form and names — beautify_arm_var","text":"","code":"beautify_arm_var(arm)"},{"path":"https://epiben.github.io/hrqolr/reference/beautify_arm_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give arm variable proper form and names — beautify_arm_var","text":"arm character vector, converted factor renamed","code":""},{"path":"https://epiben.github.io/hrqolr/reference/beautify_arm_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give arm variable proper form and names — beautify_arm_var","text":"factor right labels right order pretty printing plotting","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap confidence intervals and p values — bootstrap_estimates","title":"Bootstrap confidence intervals and p values — bootstrap_estimates","text":"Bootstrap confidence intervals p values","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap confidence intervals and p values — bootstrap_estimates","text":"","code":"bootstrap_estimates(   vals,   grps,   na_replacement = NULL,   n_samples = 2000,   alpha = 0.05 )"},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap confidence intervals and p values — bootstrap_estimates","text":"vals numeric vector grps character vector, allowed values \"ctrl\" \"actv\" used slice x two vectors values compared. n_samples scalar, number bootstrap samples alpha numeric, 1.0 - confidence_level","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap confidence intervals and p values — bootstrap_estimates","text":"four-element vector point estimate, p value confidence internal","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_mean_diffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap mean differences — bootstrap_mean_diffs","title":"Bootstrap mean differences — bootstrap_mean_diffs","text":"Bootstrap mean differences","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_mean_diffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap mean differences — bootstrap_mean_diffs","text":"","code":"bootstrap_mean_diffs(vals, grps, B = 2000L, fixed_seed = 4131L)"},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_mean_diffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap mean differences — bootstrap_mean_diffs","text":"vals numeric vector values observations grps int vector group assignments values vals parameter. Assumes: 0 = actv, 1 = ctrl. B int, number bootstrap samples (default = 2000) fixed_seed int, seed used pseudo-random number generation","code":""},{"path":"https://epiben.github.io/hrqolr/reference/bootstrap_mean_diffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap mean differences — bootstrap_mean_diffs","text":"bootstrap samples mean difference group assignment, numeric vector.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/cache_hrqolr.html","id":null,"dir":"Reference","previous_headings":"","what":"Caching of hrqolr functions — cache_hrqolr","title":"Caching of hrqolr functions — cache_hrqolr","text":"TODO: Later , may implement memoisation logic lighter memoise.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/cache_hrqolr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Caching of hrqolr functions — cache_hrqolr","text":"","code":"cache_hrqolr(   max_size = 1 * 1024^3,   max_age = Inf,   max_n = Inf,   logfile = NULL,   evict = \"lru\" )  clear_hrqolr_cache()"},{"path":"https://epiben.github.io/hrqolr/reference/cache_hrqolr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Caching of hrqolr functions — cache_hrqolr","text":"max_size Maximum size cache, bytes. cache exceeds size, cached objects removed according value evict. Use Inf size limit. default 512 megabytes. max_age Maximum age files cache evicted, seconds. Use Inf age limit. max_n Maximum number objects cache. number objects exceeds value, cached objects removed according value evict. Use Inf limit number items. logfile optional filename connection object logging information written. log console, use stderr() stdout(). evict eviction policy use decide objects removed cache pruning occurs. Currently, \"lru\" \"fifo\" supported.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/cache_hrqolr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Caching of hrqolr functions — cache_hrqolr","text":"NULL, functions called side effects: caching (clearing caches) select hrqolr functions.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_eof.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute end of follow-up — compute_eof","title":"Compute end of follow-up — compute_eof","text":"Cached. Based entirely day ICU discharge sampling frequency","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_eof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute end of follow-up — compute_eof","text":"","code":"compute_eof(t_icu_discharge, approx_end = 180, sampling_frequency = 14)"},{"path":"https://epiben.github.io/hrqolr/reference/compute_eof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute end of follow-up — compute_eof","text":"t_icu_discharge int, day ICU discharge approx_end int, approximate end day (follow-shorter ) sampling_frequency int, period samplings HRQoL","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute outcome estimates for a given patient — compute_estimates","title":"Compute outcome estimates for a given patient — compute_estimates","text":"Compute outcome estimates given patient","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute outcome estimates for a given patient — compute_estimates","text":"","code":"compute_estimates(   t_icu_discharge = NULL,   t_death = NA,   start_hrqol_patient = start_hrqol_arm,   is_mortality_benefitter = FALSE,   acceleration_hrqol = 0,   start_hrqol_arm = 0.1,   final_hrqol_arm = 0.75,   mortality_trajectory_shape = \"exp_decay\",   mortality_dampening = 0,   sampling_frequency = 14L,   n_digits = 2 )"},{"path":"https://epiben.github.io/hrqolr/reference/compute_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute outcome estimates for a given patient — compute_estimates","text":"t_icu_discharge scalar, time ICU discharge t_death numeric scalar, time death. NA represent administrative censoring (.e., patient still alive end follow-) start_hrqol_patient scalar, HRQoL value ICU discharge patient is_mortality_benefitter logical, patient mortality benefitters? Defaults FALSE. acceleration_hrqol scalar, acceleration HRQoL improvement compared baseline trajectory start_hrqol_arm scalar, HRQoL ICU discharge (arm level) final_hrqol_arm scalar HRQoL end follow-(arm level) mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" mortality_dampening scalar, dampening effect HRQoL ICU discharge patients die end follow-sampling_frequency int, span samplings patients n_digits int, number digits HRQoL values","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute outcome estimates for a given patient — compute_estimates","text":"six-element named numeric vector single-sampled HRQoL end follow-area HRQoL trajectory primary two secondary analyses.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_hosp_discharge.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute deterministic day of hospital discharge based on day of ICU discharge — compute_hosp_discharge","title":"Compute deterministic day of hospital discharge based on day of ICU discharge — compute_hosp_discharge","text":"Compute deterministic day hospital discharge based day ICU discharge","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_hosp_discharge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute deterministic day of hospital discharge based on day of ICU discharge — compute_hosp_discharge","text":"","code":"compute_hosp_discharge(t_icu_discharge)"},{"path":"https://epiben.github.io/hrqolr/reference/compute_hosp_discharge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute deterministic day of hospital discharge based on day of ICU discharge — compute_hosp_discharge","text":"t_icu_discharge int, day ICU discharge","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes select Monte Carlo performance measures — compute_performance_metrics","title":"Computes select Monte Carlo performance measures — compute_performance_metrics","text":"Computes select Monte Carlo performance measures","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes select Monte Carlo performance measures — compute_performance_metrics","text":"","code":"compute_performance_metrics(   theta_hat,   theta,   p_value,   ci_lo,   ci_hi,   alpha = 0.05 )"},{"path":"https://epiben.github.io/hrqolr/reference/compute_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes select Monte Carlo performance measures — compute_performance_metrics","text":"theta_hat vector, estimates theta vector, ground truth values (length 1 long theta_hat) p_value, ci_lo, ci_hi vectors holding p values well lower upper boundaries confidence intervals corresponding alpha (next parameter) alpha scalar [0, 1], equals 1.0 - significance level","code":""},{"path":"https://epiben.github.io/hrqolr/reference/compute_performance_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes select Monte Carlo performance measures — compute_performance_metrics","text":"named numeric vector performance measures.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_arm_level_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct arm-level trajectory — construct_arm_level_trajectory","title":"Construct arm-level trajectory — construct_arm_level_trajectory","text":"Default arguments correspond control-arm settings. patient trajectories, within given trial, based .","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_arm_level_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct arm-level trajectory — construct_arm_level_trajectory","text":"","code":"construct_arm_level_trajectory(   t_icu_discharge,   acceleration_hrqol = 0,   start_hrqol_arm = 0.1,   final_hrqol_arm = 0.75,   sampling_frequency = 14L )"},{"path":"https://epiben.github.io/hrqolr/reference/construct_arm_level_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct arm-level trajectory — construct_arm_level_trajectory","text":"t_icu_discharge scalar, time ICU discharge acceleration_hrqol scalar, acceleration HRQoL improvement compared baseline trajectory start_hrqol_arm scalar, HRQoL ICU discharge (arm level) final_hrqol_arm scalar HRQoL end follow-(arm level) sampling_frequency int, span samplings patients","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_arm_level_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct arm-level trajectory — construct_arm_level_trajectory","text":"matrix two columns: x time y corresponding HRQoL values.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_final_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute final trajectories — construct_final_trajectories","title":"Compute final trajectories — construct_final_trajectories","text":"Cached. Takes \"raw\" trajectory object samples values according sampling strategy. Assumes first coordinate traj object day ICU discharge.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_final_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute final trajectories — construct_final_trajectories","text":"","code":"construct_final_trajectories(traj, t_icu_discharge, sampling_frequency)"},{"path":"https://epiben.github.io/hrqolr/reference/construct_final_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute final trajectories — construct_final_trajectories","text":"traj matrix, x = time y = HRQoL t_icu_discharge scalar, time ICU discharge sampling_frequency int, span samplings patients","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_final_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute final trajectories — construct_final_trajectories","text":"three-element list trajectories three assumptions sampling can start.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_mortality_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct mortality trajectory for a patient — construct_mortality_trajectory","title":"Construct mortality trajectory for a patient — construct_mortality_trajectory","text":"patient dies follow-period, follow HRQoL trajectory produced function.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_mortality_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct mortality trajectory for a patient — construct_mortality_trajectory","text":"","code":"construct_mortality_trajectory(   t_death,   t_icu_discharge,   start_hrqol = 0,   mortality_trajectory_shape = \"exp_decay\",   resolution = 100,   n_halflives_to_zero = 10 )"},{"path":"https://epiben.github.io/hrqolr/reference/construct_mortality_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct mortality trajectory for a patient — construct_mortality_trajectory","text":"t_death numeric scalar, time death. NA represent administrative censoring (.e., patient still alive end follow-) t_icu_discharge scalar, time ICU discharge start_hrqol scalar, HRQoL ICU discharge mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" resolution int, number grid points HRQoL trajectory ICU discharge time death n_halflives_to_zero scalar, number half-lives one considers HRQoL equal 0.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_mortality_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct mortality trajectory for a patient — construct_mortality_trajectory","text":"Two-column matrix: x time, y HRQoL.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_patient_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the full (primary) HRQoL trajectory for a patient — construct_patient_trajectory","title":"Construct the full (primary) HRQoL trajectory for a patient — construct_patient_trajectory","text":"Construct full (primary) HRQoL trajectory patient","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_patient_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the full (primary) HRQoL trajectory for a patient — construct_patient_trajectory","text":"","code":"construct_patient_trajectory(   t_icu_discharge = NULL,   t_death = NA,   start_hrqol_patient = start_hrqol_arm,   acceleration_hrqol = 0,   start_hrqol_arm = 0.1,   final_hrqol_arm = 0.75,   is_mortality_benefitter = FALSE,   mortality_trajectory_shape = \"exp_decay\",   mortality_dampening = 0,   sampling_frequency = 14L,   n_digits = 2 )"},{"path":"https://epiben.github.io/hrqolr/reference/construct_patient_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the full (primary) HRQoL trajectory for a patient — construct_patient_trajectory","text":"t_icu_discharge scalar, time ICU discharge t_death numeric scalar, time death. NA represent administrative censoring (.e., patient still alive end follow-) start_hrqol_patient scalar, HRQoL value ICU discharge patient acceleration_hrqol scalar, acceleration HRQoL improvement compared baseline trajectory start_hrqol_arm scalar, HRQoL ICU discharge (arm level) final_hrqol_arm scalar HRQoL end follow-(arm level) is_mortality_benefitter logical, patient mortality benefitters? Defaults FALSE. mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" mortality_dampening scalar, dampening effect HRQoL ICU discharge patients die end follow-sampling_frequency int, span samplings patients n_digits int, number digits HRQoL values","code":""},{"path":"https://epiben.github.io/hrqolr/reference/construct_patient_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the full (primary) HRQoL trajectory for a patient — construct_patient_trajectory","text":"three-element list trajectories three assumptions sampling can start.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_smooth_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create smooth trajectory — create_smooth_trajectory","title":"Create smooth trajectory — create_smooth_trajectory","text":"Default settings create centripetal Catmull-Rom curve coordinates given x y.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_smooth_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create smooth trajectory — create_smooth_trajectory","text":"","code":"create_smooth_trajectory(x, y, alpha = 0.5, epsilon = 1e-04)"},{"path":"https://epiben.github.io/hrqolr/reference/create_smooth_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create smooth trajectory — create_smooth_trajectory","text":"x, y numeric vectors points connected smooth curve alpha scalar [0, 1], controls tightness curve. alpha = 0.5 (default) yields centripetal Catmull-Rom curve epsilon small scalar, used create phantom points. default value suffice use cases (see also link ).","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_smooth_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create smooth trajectory — create_smooth_trajectory","text":"data.table (x, y) coordinates smooth trajectory.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_smooth_trajectory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create smooth trajectory — create_smooth_trajectory","text":"function based nice run-smooth curves https://apoorvaj.io/cubic-bezier--four-points.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_xout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xout vector for approx() — create_xout","title":"Create xout vector for approx() — create_xout","text":"Cached. Used construct_final_trajectories().","code":""},{"path":"https://epiben.github.io/hrqolr/reference/create_xout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xout vector for approx() — create_xout","text":"","code":"create_xout(start, end, by)"},{"path":"https://epiben.github.io/hrqolr/reference/create_xout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xout vector for approx() — create_xout","text":"number: increment sequence.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/estimation_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to estimate outcomes in individual patients — estimation_helper","title":"Helper function to estimate outcomes in individual patients — estimation_helper","text":"Helper function estimate outcomes individual patients","code":""},{"path":"https://epiben.github.io/hrqolr/reference/estimation_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to estimate outcomes in individual patients — estimation_helper","text":"","code":"estimation_helper(   n_patients,   arm,   start_hrqol_arm,   final_hrqol_arm,   inter_patient_noise_sd,   acceleration_hrqol,   prop_mortality_benefitters_actv,   mortality_trajectory_shape,   mortality_dampening,   mortality_rng,   sampling_frequency = NULL,   n_digits = 2,   min_valid_hrqol = -0.757 )"},{"path":"https://epiben.github.io/hrqolr/reference/estimation_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to estimate outcomes in individual patients — estimation_helper","text":"n_patients int, number patients estimate outcomes arm string, either \"actv\" \"ctrl\" start_hrqol_arm scalar, HRQoL ICU discharge (arm level) final_hrqol_arm scalar HRQoL end follow-(arm level) acceleration_hrqol scalar, acceleration HRQoL improvement prop_mortality_benefitters_actv scalar numeric [0, 1], proportion patients active arm -called mortality benefitters. mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" mortality_dampening scalar, dampening effect HRQoL ICU discharge patients die end follow-mortality_rng function, function produces times death (one parameter number values sample) sampling_frequency int, span samplings patients n_digits int, number digits HRQoL values min_valid_hrqol scalar, minimum valid HRQoL value","code":""},{"path":"https://epiben.github.io/hrqolr/reference/estimation_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to estimate outcomes in individual patients — estimation_helper","text":"Data.table outcome results patients. NB! trial_id indicator required uses helper function.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/find_decay_halflife.html","id":null,"dir":"Reference","previous_headings":"","what":"Find appropriate half-life of exponential decay — find_decay_halflife","title":"Find appropriate half-life of exponential decay — find_decay_halflife","text":"notion function find largest half-life yields almost-zero decay factor (per tol argument) grid_end.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/find_decay_halflife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find appropriate half-life of exponential decay — find_decay_halflife","text":"","code":"find_decay_halflife(   t_diff = 180 - 1,   min_halflife = 0,   max_halflife = 180,   res = 0.1,   tol = 0.05 )"},{"path":"https://epiben.github.io/hrqolr/reference/find_decay_halflife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find appropriate half-life of exponential decay — find_decay_halflife","text":"t_diff int, span days decay span min_halflife, max_halflife integers, shortest longets half lives consider res scalar numeric, grid size half-life values checked tol scalar, proportion original HRQoL corresponds zero (default value corresponds considering <5% starting HRQoL 0)","code":""},{"path":"https://epiben.github.io/hrqolr/reference/find_decay_halflife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find appropriate half-life of exponential decay — find_decay_halflife","text":"best half-life","code":""},{"path":"https://epiben.github.io/hrqolr/reference/generate_mortality_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate density, probability, quantile and random generation functions for (scaled) empirical\nmortality distribution — generate_mortality_funs","title":"Generate density, probability, quantile and random generation functions for (scaled) empirical\nmortality distribution — generate_mortality_funs","text":"cumulative mortality functions modelled CLASSIC trial, can scaled achieve desired mortality end follow-","code":""},{"path":"https://epiben.github.io/hrqolr/reference/generate_mortality_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate density, probability, quantile and random generation functions for (scaled) empirical\nmortality distribution — generate_mortality_funs","text":"","code":"generate_mortality_funs(cum_mortality = NULL, censoring_value = NA)"},{"path":"https://epiben.github.io/hrqolr/reference/generate_mortality_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate density, probability, quantile and random generation functions for (scaled) empirical\nmortality distribution — generate_mortality_funs","text":"cum_mortality scalar [0, 1], cumulative mortality end follow-(= time censoring) censoring_value value assigned patient censored, default NA","code":""},{"path":"https://epiben.github.io/hrqolr/reference/generate_mortality_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate density, probability, quantile and random generation functions for (scaled) empirical\nmortality distribution — generate_mortality_funs","text":"list four functions, named d, p, q r follow R conventions (see, e.g., ?rnorm)","code":""},{"path":"https://epiben.github.io/hrqolr/reference/grapes-fi-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for infinities — %fi%","title":"Default value for infinities — %fi%","text":"Infix function easy replacement -Inf/Inf default value.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/grapes-fi-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for infinities — %fi%","text":"","code":"a %fi% b"},{"path":"https://epiben.github.io/hrqolr/reference/grapes-fi-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for infinities — %fi%","text":", b arbitrary vectors","code":""},{"path":"https://epiben.github.io/hrqolr/reference/linear_approx.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate multiple values — linear_approx","title":"Interpolate multiple values — linear_approx","text":"User-facing, stripped-version approx.c stats package (around twice fast one). Yields somewhere around 10x speed-compared using stats::approx().","code":""},{"path":"https://epiben.github.io/hrqolr/reference/linear_approx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate multiple values — linear_approx","text":"","code":"linear_approx(x, y, xout)"},{"path":"https://epiben.github.io/hrqolr/reference/linear_approx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate multiple values — linear_approx","text":"x, y coordinates known observationa xout vector scalar value(s) interpolation happen","code":""},{"path":"https://epiben.github.io/hrqolr/reference/linear_approx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate multiple values — linear_approx","text":"Interpolated values","code":""},{"path":"https://epiben.github.io/hrqolr/reference/log_timediff.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for printing time difference to stdout as message — log_timediff","title":"Helper for printing time difference to stdout as message — log_timediff","text":"Helper printing time difference stdout message","code":""},{"path":"https://epiben.github.io/hrqolr/reference/log_timediff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for printing time difference to stdout as message — log_timediff","text":"","code":"log_timediff(start_time, mess = NULL, now = Sys.time())"},{"path":"https://epiben.github.io/hrqolr/reference/log_timediff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for printing time difference to stdout as message — log_timediff","text":"start_time, now output Sys.time() mess str, message print","code":""},{"path":"https://epiben.github.io/hrqolr/reference/na_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ","title":"Create ","text":"Useful patients data every observed.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/na_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ","text":"","code":"na_matrix(t)"},{"path":"https://epiben.github.io/hrqolr/reference/na_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ","text":"t scalar","code":""},{"path":"https://epiben.github.io/hrqolr/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting methods for HRQoL results — plot","title":"Plotting methods for HRQoL results — plot","text":"Plotting methods HRQoL results Plot method example trajectories","code":""},{"path":"https://epiben.github.io/hrqolr/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting methods for HRQoL results — plot","text":"","code":"# S3 method for hrqolr_trajectories plot(   x,   which = \"both\",   arm_aes = NULL,   patient_aes = list(alpha = 0.2),   ribbon_aes = list(alpha = 0.2),   ribbon_percentiles = c(0.25, 0.75),   ... )"},{"path":"https://epiben.github.io/hrqolr/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting methods for HRQoL results — plot","text":"x object plot, see Details. character, one \"\" (arm patient trajectories, default), \"arm\" (arm trajectories), \"patient\" (patient trajectories) \"summarise\" (arm trajectories ribbons summarising patient trajectories). arm_aes, patient_aes, ribbon_aes lists additional settings arm, patients ribbon layers. ribbon_percentiles scalar two elements defining lower upper percentiles band drawn summarise patient trajectories ... passed methods","code":""},{"path":"https://epiben.github.io/hrqolr/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting methods for HRQoL results — plot","text":"ggplot2 object. ggplot.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/plot.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plotting methods for HRQoL results — plot","text":"plot(hrqolr_trajectories): Example trajectories","code":""},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print methods for HRQoL results — print","title":"Print methods for HRQoL results — print","text":"Prints contents first input x human-friendly way, see Details information.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print methods for HRQoL results — print","text":"","code":"# S3 method for hrqolr_examples print(x, prop_digits = 3, ...)"},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print methods for HRQoL results — print","text":"x object print, see Details. prop_digits single integer (default 3), number digits used printing proportions. ... passed methods","code":""},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print methods for HRQoL results — print","text":"Invisibly returns x.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print methods for HRQoL results — print","text":"behaviour depends class x:","code":""},{"path":"https://epiben.github.io/hrqolr/reference/print.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Print methods for HRQoL results — print","text":"print(hrqolr_examples): Example trajectories","code":""},{"path":"https://epiben.github.io/hrqolr/reference/replace_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NA's — replace_na","title":"Default value for NA's — replace_na","text":"Helper function simple handling missing values vectors. type checking done.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/replace_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NA's — replace_na","text":"","code":"replace_na(x, replacement)"},{"path":"https://epiben.github.io/hrqolr/reference/replace_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NA's — replace_na","text":"x arbitrary vector replacement replacement value","code":""},{"path":"https://epiben.github.io/hrqolr/reference/replace_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default value for NA's — replace_na","text":"x vector NA's replaced replacement.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale numeric vector to sum to 1 — rescale","title":"Scale numeric vector to sum to 1 — rescale","text":"Scale numeric vector sum 1","code":""},{"path":"https://epiben.github.io/hrqolr/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale numeric vector to sum to 1 — rescale","text":"","code":"rescale(x)"},{"path":"https://epiben.github.io/hrqolr/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale numeric vector to sum to 1 — rescale","text":"x numeric vector, contain NA's","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_example_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample example trajectories — sample_example_trajectories","title":"Sample example trajectories — sample_example_trajectories","text":"Sample desired number trajectories arm leven individual patients.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_example_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample example trajectories — sample_example_trajectories","text":"","code":"sample_example_trajectories(   n_example_trajectories_per_arm = 100,   start_hrqol_ctrl = 0.1,   final_hrqol_ctrl = 0.75,   relative_improvement_start_hrqol_actv = 0,   relative_improvement_final_hrqol_actv = 0,   sampling_frequency = 14L,   acceleration_hrqol_actv = 0.1,   mortality_ctrl = 0.4,   relative_mortality_reduction_actv = 0.05,   mortality_dampening = 0.7,   mortality_trajectory_shape = \"exp_decay\",   prop_mortality_benefitters_actv = 0.1,   n_digits = 2,   seed = NULL,   ... )"},{"path":"https://epiben.github.io/hrqolr/reference/sample_example_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample example trajectories — sample_example_trajectories","text":"n_example_trajectories_per_arm int, number example trajectories include returned object start_hrqol_ctrl, final_hrqol_ctrl numeric scalars, HRQoL ICU discharge end follow-control arm, respectively relative_improvement_start_hrqol_actv, relative_improvement_final_hrqol_actv scalar numeric, e.g. 0.10 means HRQoL start end follow-, resp. active arm increased 10% compared control arm sampling_frequency int, span samplings patients acceleration_hrqol_actv scalar, relative acceleration HRQoL improvement active arm mortality_ctrl numeric scalar, mortality control group end follow-relative_mortality_reduction_actv numeric scalar, e.g. 0.10 means mortality active arm 90% control arm mortality_dampening scalar, dampening effect HRQoL ICU discharge patients die end follow-mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" prop_mortality_benefitters_actv scalar numeric [0, 1], proportion patients active arm -called mortality benefitters. n_digits int, number digits HRQoL values seed int, optional seed reproducible pseudo-random number generation. Defaults deterministic value based arguments given (ensuring reproducibility default). ... used","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_example_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample example trajectories — sample_example_trajectories","text":"object class hrqolr_examples trajectories data.tables. function always return arm-level trajectories. n_example_trajectories_per_arm > 0, also return data.table patient trajectories, id column denoting patients. ","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_t_icu_discharge.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample time to ICU discharge — sample_t_icu_discharge","title":"Sample time to ICU discharge — sample_t_icu_discharge","text":"Helper function.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_t_icu_discharge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample time to ICU discharge — sample_t_icu_discharge","text":"","code":"sample_t_icu_discharge(n)"},{"path":"https://epiben.github.io/hrqolr/reference/sample_t_icu_discharge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample time to ICU discharge — sample_t_icu_discharge","text":"n int, number times ICU discharge sample.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/sample_t_icu_discharge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample time to ICU discharge — sample_t_icu_discharge","text":"numeric vector length n sampled times.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/simulate_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate trials — simulate_trials","title":"Simulate trials — simulate_trials","text":"key user-facing function simulating trials.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/simulate_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate trials — simulate_trials","text":"","code":"simulate_trials(   n_trials = 100000L,   n_patients_per_arm = 100L,   start_hrqol_ctrl = 0.1,   final_hrqol_ctrl = 0.75,   relative_improvement_start_hrqol_actv = 0,   relative_improvement_final_hrqol_actv = 0.1,   sampling_frequency = 14L,   acceleration_hrqol_actv = 0.1,   mortality_ctrl = 0.4,   relative_mortality_reduction_actv = 0.05,   mortality_dampening = 0.7,   mortality_trajectory_shape = \"exp_decay\",   prop_mortality_benefitters_actv = 0.1,   verbose = TRUE,   n_digits = 2,   seed = NULL,   n_patients_ground_truth = 100000L,   n_example_trajectories_per_arm = 0,   ... )"},{"path":"https://epiben.github.io/hrqolr/reference/simulate_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate trials — simulate_trials","text":"n_trials int scalar vector. vector, simulations run batches size given elements. n_patients_per_arm int scalar start_hrqol_ctrl, final_hrqol_ctrl numeric scalars, HRQoL ICU discharge end follow-control arm, respectively relative_improvement_start_hrqol_actv, relative_improvement_final_hrqol_actv scalar numeric, e.g. 0.10 means HRQoL start end follow-, resp. active arm increased 10% compared control arm sampling_frequency int, span samplings patients acceleration_hrqol_actv scalar, relative acceleration HRQoL improvement active arm mortality_ctrl numeric scalar, mortality control group end follow-relative_mortality_reduction_actv numeric scalar, e.g. 0.10 means mortality active arm 90% control arm mortality_dampening scalar, dampening effect HRQoL ICU discharge patients die end follow-mortality_trajectory_shape string, following four: \"exp_decay\" (default), \"linear\", \"constant\", \"reflected_exp_decay\" prop_mortality_benefitters_actv scalar numeric [0, 1], proportion patients active arm -called mortality benefitters. verbose logical, function give progress timestamped updates? Default: TRUE n_digits int, number digits HRQoL values seed int, optional seed reproducible pseudo-random number generation. Defaults deterministic value based arguments given (ensuring reproducibility default). n_patients_ground_truth int, many patients (per arm) use estimating ground truth n_example_trajectories_per_arm int, number example trajectories include returned object ..., used","code":""},{"path":"https://epiben.github.io/hrqolr/reference/simulate_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate trials — simulate_trials","text":"object class hrqolr_results, specialised list four elements: summary statistics arm, comparisons (incl. performance metrics), seed elapsed time.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/stop0_warning0.html","id":null,"dir":"Reference","previous_headings":"","what":"stop() and warning() with call. = FALSE — stop0_warning0","title":"stop() and warning() with call. = FALSE — stop0_warning0","text":"Used internally. Calls stop0() warning() enforces call. = FALSE, suppress call error/warning.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/stop0_warning0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stop() and warning() with call. = FALSE — stop0_warning0","text":"","code":"stop0(...)  warning0(...)"},{"path":"https://epiben.github.io/hrqolr/reference/stop0_warning0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stop() and warning() with call. = FALSE — stop0_warning0","text":"... zero objects can coerced character     (pasted together separator) single     condition object.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/summarise_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a variable with common statistics — summarise_var","title":"Summarise a variable with common statistics — summarise_var","text":"Input e.g. scalar get corresponding names","code":""},{"path":"https://epiben.github.io/hrqolr/reference/summarise_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a variable with common statistics — summarise_var","text":"","code":"summarise_var(x, probs = c(0.25, 0.5, 0.75), na_rm = TRUE)"},{"path":"https://epiben.github.io/hrqolr/reference/summarise_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a variable with common statistics — summarise_var","text":"x numeric vector probs probabilities compute quantiles na_rm logical, NA's removed (default: TRUE)","code":""},{"path":"https://epiben.github.io/hrqolr/reference/vapply_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"vapply helpers — vapply_helpers","title":"vapply helpers — vapply_helpers","text":"Used internally. Helpers simplifying code invoking vapply().","code":""},{"path":"https://epiben.github.io/hrqolr/reference/vapply_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vapply helpers — vapply_helpers","text":"","code":"vapply_num(X, FUN, ...)  vapply_int(X, FUN, ...)  vapply_str(X, FUN, ...)  vapply_lgl(X, FUN, ...)"},{"path":"https://epiben.github.io/hrqolr/reference/vapply_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vapply helpers — vapply_helpers","text":"X vector (atomic list) expression     object.  objects (including classed objects) coerced     base::.list. FUN function applied element X:     see ‘Details’.  case functions like     +, %*%, function name must backquoted quoted. ... optional arguments FUN.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/welch_t_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Welch's t test — welch_t_test","title":"Welch's t test — welch_t_test","text":"Custom stripped-version R's built-t.test yields estimate confidence interval corresponding specified alpha level.","code":""},{"path":"https://epiben.github.io/hrqolr/reference/welch_t_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welch's t test — welch_t_test","text":"","code":"welch_t_test(vals, grps, na_replacement = NULL, alpha = 0.05)"},{"path":"https://epiben.github.io/hrqolr/reference/welch_t_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welch's t test — welch_t_test","text":"vals numeric vector grps character vector, allowed values \"ctrl\" \"actv\" used slice x two vectors values compared. alpha numeric, 1.0 - confidence_level","code":""},{"path":"https://epiben.github.io/hrqolr/reference/welch_t_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Welch's t test — welch_t_test","text":"four-element vector point estimate, p value confidence internal","code":""}]
